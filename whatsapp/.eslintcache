[{"D:\\react-workspace\\whatsapp\\src\\reportWebVitals.js":"1","D:\\react-workspace\\whatsapp\\src\\App.js":"2","D:\\react-workspace\\whatsapp\\src\\Sidebar.js":"3","D:\\react-workspace\\whatsapp\\src\\SidebarChat.js":"4","D:\\react-workspace\\whatsapp\\src\\Chat.js":"5","D:\\react-workspace\\whatsapp\\src\\firebase.js":"6","D:\\react-workspace\\whatsapp\\src\\index.js":"7","D:\\react-workspace\\whatsapp\\src\\Login.js":"8","D:\\react-workspace\\whatsapp\\src\\reducer.js":"9","D:\\react-workspace\\whatsapp\\src\\StateProvider.js":"10"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"12"},{"size":908,"mtime":1608529815063,"results":"13","hashOfConfig":"12"},{"size":2141,"mtime":1608529299106,"results":"14","hashOfConfig":"12"},{"size":1505,"mtime":1608502417765,"results":"15","hashOfConfig":"12"},{"size":3817,"mtime":1608529610705,"results":"16","hashOfConfig":"12"},{"size":679,"mtime":1606779509866,"results":"17","hashOfConfig":"12"},{"size":688,"mtime":1606866756337,"results":"18","hashOfConfig":"12"},{"size":1136,"mtime":1608502282481,"results":"19","hashOfConfig":"12"},{"size":482,"mtime":1606865936477,"results":"20","hashOfConfig":"12"},{"size":463,"mtime":1608502329271,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1rplyjv",{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\react-workspace\\whatsapp\\src\\reportWebVitals.js",[],"D:\\react-workspace\\whatsapp\\src\\App.js",["43","44"],"D:\\react-workspace\\whatsapp\\src\\Sidebar.js",["45"],"D:\\react-workspace\\whatsapp\\src\\SidebarChat.js",[],"D:\\react-workspace\\whatsapp\\src\\Chat.js",["46","47"],"import { Avatar, IconButton } from '@material-ui/core'\r\nimport { AttachFile, InsertEmoticon, Mic, MoreVert, SearchOutlined } from '@material-ui/icons'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport db  from './firebase'\r\nimport './Chat.css'\r\nimport { useStateValue } from './StateProvider'\r\nimport firebase from 'firebase'\r\n\r\nfunction Chat() {\r\n\r\n    const [seed, setSeed] = useState(\"\");\r\n    const [input, setInput] = useState(\"\");\r\n    const { roomId } = useParams(); \r\n    const [roomName, setRoomName] = useState(\"\");\r\n    const [messages, setMessages] = useState([]);\r\n    const [{ user }, dispatch] = useStateValue();\r\n\r\n    useEffect(() =>{\r\n        if(roomId){\r\n            db.collection('rooms').doc(roomId)\r\n            .onSnapshot((snapshot) => \r\n                setRoomName(snapshot.data().name)\r\n            )\r\n            db.collection('rooms').doc(roomId)\r\n            .collection('messages').orderBy('timestamp','asc')\r\n            .onSnapshot(snapshot=>(\r\n                setMessages(snapshot.docs.map(doc=>doc.data()))\r\n            ))\r\n        }\r\n    }, [roomId])\r\n\r\n    useEffect(() => {\r\n        setSeed(Math.floor(Math.random()*5000));\r\n    }, [roomId]);\r\n\r\n    const sendMessage = (e)=>{\r\n        e.preventDefault();\r\n        db.collection('rooms').doc(roomId)\r\n        .collection('messages').add({\r\n            message : input,\r\n            name : user.displayName,\r\n            timestamp : firebase.firestore.FieldValue.serverTimestamp()\r\n        })\r\n        setInput(\"\");\r\n    }\r\n\r\n    return (\r\n        <div className='chat'>\r\n            <div className='chat__header'>\r\n                <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`}/>\r\n                <div className='chat__headerInfo'>\r\n                    <h3>{roomName}</h3>\r\n                    <p>Last seen at &nbsp;\r\n                        {\r\n                            new Date(\r\n                                messages[messages.length-1]?.timestamp?.toDate()\r\n                            ).toUTCString()\r\n                        }\r\n                    </p>\r\n                </div>\r\n                <div className=\"chat__headerRight\">\r\n                    <IconButton>\r\n                        <SearchOutlined />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <AttachFile />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <MoreVert />\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n            <div className='chat__body'>\r\n                {\r\n                    messages.map(message=>(\r\n                        <p className={`chat__message ${message.name==user.displayName && 'chat__receiver'}`}>\r\n                            <span className=\"chat__name\">{message.name}</span>\r\n                                {message.message}\r\n                            <span className='chat__timestamp'>\r\n                                {new Date(message.timestamp?.toDate()).toUTCString()}\r\n                            </span>\r\n                        </p>\r\n                    ))\r\n                }\r\n\r\n            </div>\r\n            <div className='chat__footer'>\r\n                    <IconButton>\r\n                        <InsertEmoticon />\r\n                    </IconButton>\r\n                    <form>\r\n                        <input value={input} onChange={(e)=>setInput(e.target.value)} placeholder=\"Type a message\" type=\"text\" />\r\n                        <button onClick={sendMessage} type=\"submit\">Send a message</button>\r\n                    </form>\r\n                    <IconButton>\r\n                        <Mic />\r\n                    </IconButton>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat\r\n","D:\\react-workspace\\whatsapp\\src\\firebase.js",[],"D:\\react-workspace\\whatsapp\\src\\index.js",[],"D:\\react-workspace\\whatsapp\\src\\Login.js",["48"],"D:\\react-workspace\\whatsapp\\src\\reducer.js",[],"D:\\react-workspace\\whatsapp\\src\\StateProvider.js",[],{"ruleId":"49","severity":1,"message":"50","line":2,"column":16,"nodeType":"51","messageId":"52","endLine":2,"endColumn":24},{"ruleId":"49","severity":1,"message":"53","line":12,"column":19,"nodeType":"51","messageId":"52","endLine":12,"endColumn":27},{"ruleId":"49","severity":1,"message":"53","line":15,"column":18,"nodeType":"51","messageId":"52","endLine":15,"endColumn":26},{"ruleId":"49","severity":1,"message":"53","line":17,"column":22,"nodeType":"51","messageId":"52","endLine":17,"endColumn":30},{"ruleId":"54","severity":1,"message":"55","line":77,"column":68,"nodeType":"56","messageId":"57","endLine":77,"endColumn":70},{"ruleId":"58","severity":1,"message":"59","line":10,"column":11,"nodeType":"60","messageId":"57","endLine":10,"endColumn":13},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'dispatch' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern"]